module Datapath(
	input clock, clear
);

//Register File:


// Bus Mux Inputs:
wire [31:0] BusMuxInR0, BusMuxInR1, BusMuxInR2, BusMuxInR3, BusMuxInR4, BusMuxInR5, BusMuxInR6, BusMuxInR7;
wire [31:0]	BusMuxInR8, BusMuxInR9, BusMuxInR10, BusMuxInR11, BusMuxInR12, BusMuxInR13, BusMuxInR14, BusMuxInR15;
wire [31:0] BusMuxInHI, BusMuxInLO, BusMuxInZhigh, BusMuxInZlow, BusMuxInPC, BusMuxInMDR;
wire [31:0] BusMuxInPort, BusMuxInCin;
	
//Bus Encoder Inputs	
wire R0out, R1out, R2out, R3out, R4out, R5out, R6outl;
wire R7out, R8out, R9out, R10out, R11out, R12out;
wire R13out, R14out, R15out, HIout, LOout, Zhighout;
wire Zlowout, PCout, MDRout,InPortout, Cout;

wire [31:0] BusMuxOut, Mdatain;
wire read;
wire MDRin;

//General Register Setup:
Register r0(clear	, clock, enable, BusMuxOut, BusMuxIn);
Register r1(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r2(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r3(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r4(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r5(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r6(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r7(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r8(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r9(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r10(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r11(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r12(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r13(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r14(clear, clock, enable, BusMuxOut, BusMuxIn);
Register r15(clear, clock, enable, BusMuxOut, BusMuxIn);

//Special Registers:
Register rHi(clear, clock, enable, BusMuxOut, BusMuxIn);
Register rLo(clear, clock, enable, BusMuxOut, BusMuxIn);
Register rZhi(clear, clock, enable, BusMuxOut, BusMuxIn);
Register rZlo(clear, clock, enable, BusMuxOut, BusMuxIn);
Register PC(clear, clock, enable, BusMuxOut, BusMuxIn);
Register rInPort(clear, clock, enable, BusMuxOut, BusMuxIn);
Register rOutPort(clear, clock, enable, BusMuxOut, BusMuxIn);
Register MAR(clear, clock, enable, BusMuxOut, BusMuxIn);

//MDR Register:
MDR mdr(clear, clock, enable, read, BusMuxOut, Mdatain, BusMuxIn);

//Bus
Bus bus(BusMuxInR0, BusMuxInR1, BusMuxInR2, BusMuxInR3, BusMuxInR4, BusMuxInR5, BusMuxInR6, BusMuxInR7, BusMuxInR8, BusMuxInR9, BusMuxInR10, BusMuxInR11, BusMuxInR12, BusMuxInR13, BusMuxInR14, BusMuxInR15, BusMuxInHI, BusMuxInLO, BusMuxInZhigh, BusMuxInZlow, BusMuxInPC, BusMuxInMDR, BusMuxInPort, BusMuxInCin, R0out, R10out, R2out, R3out, R4out, R5out, R6out, R7out, R8out, R9out, R10out, R11out, R12out, R13out, R14out, R15out, HIout, LOout, Zhighout, Zlowout, PCout, MDRout, InPortout, Cout, BusMuxOut);

endmodule 